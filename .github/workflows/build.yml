name: Build Garmin PRG

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Write developer key
        run: |
          printf "%s" "${GARMIN_DEVELOPER_KEY}" > developer_key.der
        shell: sh
        env:
          GARMIN_DEVELOPER_KEY: ${{ secrets.GARMIN_DEVELOPER_KEY }}
      
      - name: Build ConnectIQ project
        # This action is designed to handle the build process, including
        # fetching the necessary SDK and dependencies.
        uses: littledev/garmin-connectiq-build-action@v1
        with:
          source-file: 'source/BuzzClock.mc'
          developer-key: ${{ secrets.GARMIN_DEVELOPER_KEY }}
      
      - name: Create release artifact
        # This action handles the final packaging of the .prg file.
        uses: littledev/garmin-connectiq-release-action@v1
        with:
          source-file: 'source/BuzzClock.mc'
          developer-key: ${{ secrets.GARMIN_DEVELOPER_KEY }}
          output-file: 'bin/buzzclock.prg'
